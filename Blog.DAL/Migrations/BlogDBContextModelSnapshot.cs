// <auto-generated />
using System;
using Blog.DAL.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.DAL.Migrations
{
    [DbContext(typeof(BlogDBContext))]
    partial class BlogDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Entities.Entities.Article", b =>
                {
                    b.Property<int>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfClick")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ArticleID");

                    b.HasIndex("UserID");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleID = 1,
                            CategoryID = 3,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 11, 8, 14, 21, 5, 244, DateTimeKind.Local).AddTicks(4809),
                            Description = "Basketbol Adına Herşey",
                            NumberOfClick = 342,
                            Title = "Spor Makalesi",
                            UserID = 1
                        },
                        new
                        {
                            ArticleID = 2,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsumrem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 19, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7638),
                            Description = "Sanat Adına Herşey",
                            NumberOfClick = 122,
                            Title = "Sanat Makalesi",
                            UserID = 1
                        },
                        new
                        {
                            ArticleID = 3,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum loremsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 25, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7786),
                            Description = "Sanat Adına Herşey 2",
                            NumberOfClick = 0,
                            Title = "Sanat Makalesi2",
                            UserID = 1
                        },
                        new
                        {
                            ArticleID = 4,
                            CategoryID = 3,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 15, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7824),
                            Description = "Basketbol Adına Herşey",
                            NumberOfClick = 34,
                            Title = "Spor Makalesi",
                            UserID = 2
                        },
                        new
                        {
                            ArticleID = 5,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsumrem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 18, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7848),
                            Description = "Sanat Adına Herşey",
                            NumberOfClick = 125,
                            Title = "Sanat Makalesi",
                            UserID = 2
                        },
                        new
                        {
                            ArticleID = 6,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum loremsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 26, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7875),
                            Description = "Sanat Adına Herşey 2",
                            NumberOfClick = 11,
                            Title = "Sanat Makalesi2",
                            UserID = 2
                        },
                        new
                        {
                            ArticleID = 7,
                            CategoryID = 3,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 30, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7896),
                            Description = "Basketbol Adına Herşey",
                            NumberOfClick = 67,
                            Title = "Spor Makalesi",
                            UserID = 3
                        },
                        new
                        {
                            ArticleID = 8,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsumrem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 20, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7917),
                            Description = "Sanat Adına Herşey",
                            NumberOfClick = 98,
                            Title = "Sanat Makalesi",
                            UserID = 3
                        },
                        new
                        {
                            ArticleID = 9,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum loremsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 14, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7937),
                            Description = "Sanat Adına Herşey 2",
                            NumberOfClick = 34,
                            Title = "Sanat Makalesi2",
                            UserID = 3
                        },
                        new
                        {
                            ArticleID = 10,
                            CategoryID = 3,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 13, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7959),
                            Description = "Basketbol Adına Herşey",
                            NumberOfClick = 66,
                            Title = "Spor Makalesi",
                            UserID = 4
                        },
                        new
                        {
                            ArticleID = 11,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsumrem lorem ipsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 16, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7978),
                            Description = "Sanat Adına Herşey",
                            NumberOfClick = 21,
                            Title = "Sanat Makalesi",
                            UserID = 4
                        },
                        new
                        {
                            ArticleID = 12,
                            CategoryID = 2,
                            Content = "Lorem ipsum lorem lorem ipsum Lorem ipsum loremsum Lorem ipsum lorem lorem ipsum Lorem ipsum lorem lorem ipsum",
                            Date = new DateTime(2021, 10, 16, 14, 21, 5, 245, DateTimeKind.Local).AddTicks(7998),
                            Description = "Sanat Adına Herşey 2",
                            NumberOfClick = 76,
                            Title = "Sanat Makalesi2",
                            UserID = 4
                        });
                });

            modelBuilder.Entity("Blog.Entities.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArticleID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.HasIndex("ArticleID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Teknoloji"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Sanat"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Spor"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Sağlık"
                        });
                });

            modelBuilder.Entity("Blog.Entities.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Name = "adminname1",
                            Password = "a722c63db8ec8625af6cf71cb8c2d939",
                            Surname = "adminsurname1",
                            UserName = "admin",
                            UserRole = 1
                        },
                        new
                        {
                            UserID = 2,
                            Name = "name2",
                            Password = "a722c63db8ec8625af6cf71cb8c2d939",
                            Surname = "surname2",
                            UserName = "username2",
                            UserRole = 2
                        },
                        new
                        {
                            UserID = 3,
                            Name = "name3",
                            Password = "a722c63db8ec8625af6cf71cb8c2d939",
                            Surname = "surname3",
                            UserName = "username3",
                            UserRole = 2
                        },
                        new
                        {
                            UserID = 4,
                            Name = "name4",
                            Password = "a722c63db8ec8625af6cf71cb8c2d939",
                            Surname = "surname4",
                            UserName = "username4",
                            UserRole = 2
                        });
                });

            modelBuilder.Entity("Blog.Entities.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entities.Entities.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog.Entities.Entities.Category", b =>
                {
                    b.HasOne("Blog.Entities.Entities.Article", "Article")
                        .WithMany("Categories")
                        .HasForeignKey("ArticleID");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Blog.Entities.Entities.Article", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Blog.Entities.Entities.User", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
